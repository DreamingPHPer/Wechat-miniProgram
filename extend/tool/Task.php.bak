<?php
namespace tool;

/**
 *短信发送
 */
class Task{
    protected $ssdb = null;
    
    public function __construct(){
        //初始化SSDB
        $this->initSsdb();
    }
    
    /**
     * 开始执行任务
     * @param $type 任务类型
     * @return bool
     */
    public function start($task_type = 'sendSms'){
        //执行任务
        while (true){
            //获取任务
            $data = $this->getTask($task_type);
            if(!empty($data->data)) {
                $data = json_decode($data->data,true);
                $result = $this->dealTask($data);
                if($result){
                    $data['status'] = 1;
                }else{
                    $data['status'] = 2;
                    //任务执行，将任务加到队列后面
                    $this->qpushBack($data['type'], $data);
                }
                $this->addTaskToMysql($data);
            }else{
                sleep(15);
                continue;
            }
        }
    }
    
    //初始化SSDB
    private function initSsdb(){
        try{
            $this->ssdb = new \SSDB('ssdb', '8888');
        }catch(\Exception $e){
            
        } 
    }
    
    /**
     * 添加任务
     * param type 标志  短信:sendSms
     * pram data 数据
     * form 来源 1小程序，2公众号
     * */
    public function addTask($data, $form = 1, $type = 'sendSms'){
        if(empty($data)){
            return false;
        }
        
        $new_data = array(
            'type' => $type,
            'data' => $data,
            'from' => $form
        );

        $result = $this->qpushBack($type, $new_data);

        return $result;
  
    }
    
    //向队列尾部添加元素
    private function qpushBack($queue,$item){
        //向队列添加任务
        $ssdb = $this->ssdb;
        return $ssdb->qpush_back($queue,json_encode($item, JSON_UNESCAPED_UNICODE));
    }
    
    //向数据库添加任务记录
    private function addTaskToMysql($data){
        $data['data'] = json_encode($data['data']);
        $task_model = model('common/Task'); 
        return $task_model->save($data);
    }
    
    //获取任务
    private function getTask($type){
        //从队列取出任务
        $ssdb = $this->ssdb;
        $result = $ssdb->qpop_front($type); 
        return $result;
    }
 
    //处理任务
    private function dealTask($data){
        if(empty($data)) {
            return false;
        }

        $result = '';
        $func = $data['type'];
        if(!empty($func) && method_exists($this,$func)){
            return $result = $this->$func($data);
        }

        return false;
    }

    /** 处理短信
     * @param $data
     * @return bool
     * 
     */
    private function sendSms($data){
        $handle = $data['data'];
        $result = sendSms($handle['phone'], $handle['module_id'], $handle['data']);
        return $result['status'];
    }
    
    //采购信息定时下架
    private function downPurchase($data){
        $handle = $data['data'];
 
        $result = false;
        $purchase_model = model('index/Purchase');
        if($handle['deadline'] <= time()){
            $result = $purchase_model->save(array('status'=>0),array('id'=>$handle['id']));
        }

        return $result;
    }
}
